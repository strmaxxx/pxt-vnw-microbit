<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="+sus{z#;@orl4ilEQLN{" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="@-{v6Xr@fRCaxRGe([}_" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace vnw_microbit{" line1="" line2="    let recvString = '';" line3="    let wifi_connected = false;" line4="" line5="    let pauseBaseValue: number = 1000;" line6="    let EventSource = 2836;" line7="    enum EventValue {" line8="        NONE," line9="        ConnectWifi," line10="        CIPSTART," line11="        CIPSEND," line12="        CIPSEND_DATA," line13="        CIPCLOSE," line14="        WAITOK" line15="" line16="    }" line17="    let currentEvent = EventValue.NONE;" line18="" line19="" line20="    function sendAT(command: string, wait: number = 0) {" line21="        serial.writeString(`${command}\u000D\u000A`)" line22="        if(wait) basic.pause(wait)" line23="    }" line24="" line25="    function restEsp8266() {" line26="        sendAT(&quot;AT+RESTORE&quot;, 1000) // restore to factory settings" line27="        sendAT(&quot;AT+RST&quot;, 1000) // rest" line28="        serial.readString()" line29="        sendAT(&quot;AT+CWMODE=1&quot;, 500) // set to STA mode" line30="        sendAT(&quot;AT+SYSTIMESTAMP=1634953609130&quot;, 100) // Set local timestamp." line31="        sendAT(`AT+CIPSNTPCFG=1,8,&quot;ntp1.aliyun.com&quot;,&quot;0.pool.ntp.org&quot;,&quot;time.google.com&quot;`, 100)" line32="    }" line33="" line34="    //% block=&quot;Připojit k wifi SSID = %ssid|KEY = %pw&quot;" line35="    //% ssid.defl=Název_sítě" line36="    //% pw.defl=Heslo_sítě weight=95" line37="    export function wiFiConnect(ssid: string, pw: string): void {" line38="" line39="        control.runInParallel(function(){" line40="            serial.redirect(" line41="                SerialPin.P8," line42="                SerialPin.P12," line43="                BaudRate.BaudRate115200" line44="            )" line45="            basic.pause(100);" line46="" line47="            serial.setTxBufferSize(128);" line48="            serial.setRxBufferSize(128);  " line49="            restEsp8266();" line50="" line51="            currentEvent = EventValue.ConnectWifi" line52="            sendAT(`AT+CWJAP=&quot;${ssid}&quot;,&quot;${pw}&quot;`) // connect to Wifi router" line53="            control.waitForEvent(EventSource, EventValue.ConnectWifi)" line54="            while (!wifi_connected) {" line55="                restEsp8266()" line56="                sendAT(`AT+CWJAP=&quot;${ssid}&quot;,&quot;${pw}&quot;`)" line57="                control.waitForEvent(EventSource, EventValue.ConnectWifi)" line58="            }" line59="        })" line60="    }" line61="" line62="    //% block=&quot;Odešli uložená data data = %body&quot;" line63="    //% body.defl=&quot;Textová data&quot;" line64="    export function sendData(body: string) {" line65="" line66="        sendTextData(body);" line67="    }" line68="" line69="    function sendTextData(body : string){" line70="" line71="        control.runInParallel(function(){" line72="" line73="            while (!wifi_connected) {" line74="                control.waitForEvent(EventSource, EventValue.ConnectWifi)" line75="            }" line76="" line77="            //recvString = '';" line78="" line79="            let myMethod = 'POST';" line80="            let host = 'www.vnw.cz';" line81="            let port = '80';" line82="            let urlPath = '/microbit';" line83="            " line84="            let data: string = &quot;AT+CIPSTART=\&quot;TCP\&quot;,\&quot;&quot; + host + &quot;\&quot;,&quot; + port" line85="            " line86="" line87="            currentEvent = EventValue.CIPSTART" line88="            sendAT(data);" line89="            control.waitForEvent(EventSource, EventValue.CIPSTART)" line90="            control.waitForEvent(EventSource, EventValue.WAITOK)" line91="" line92="            //data = &quot;GET /microbit&quot;" line93="        " line94="            //sendAT(&quot;AT+CIPSEND=&quot; + (data.length + 2), pauseBaseValue * 3)" line95="            //sendAT(data, pauseBaseValue * 6)" line96="" line97="            data = myMethod + &quot; &quot; + urlPath + &quot; HTTP/1.1&quot; + &quot;\u000D&quot; + &quot;\u000A&quot;" line98="                + &quot;Host: &quot; + host + &quot;\u000D&quot; + &quot;\u000A&quot;" line99="            /*" line100="            if (headers &amp;&amp; headers.length &gt; 0) {" line101="                data += headers + &quot;\u000D&quot; + &quot;\u000A&quot;" line102="            }*/" line103="            data += &quot;Test: xxx\u000D&quot; + &quot;\u000A&quot;" line104="            data += &quot;Test2: yyy\u000D&quot; + &quot;\u000A&quot;" line105="            data += &quot;Content-length: &quot; + body.length + &quot;\u000D&quot; + &quot;\u000A&quot;" line106="            data += &quot;\u000D&quot; + &quot;\u000A&quot;" line107="            data += body" line108="            data += &quot;\u000D&quot; + &quot;\u000A&quot;" line109="            // Send data:" line110="" line111="            currentEvent = EventValue.CIPSEND" line112="            sendAT(&quot;AT+CIPSEND=&quot; + (data.length + 2))" line113="            control.waitForEvent(EventSource, EventValue.CIPSEND)" line114="            control.waitForEvent(EventSource, EventValue.WAITOK)" line115="" line116="" line117="            currentEvent = EventValue.CIPSEND_DATA" line118="            sendAT(data)" line119="            control.waitForEvent(EventSource, EventValue.CIPSEND_DATA)" line120="            control.waitForEvent(EventSource, EventValue.WAITOK)" line121="            // Close TCP connection:" line122="            sendAT(&quot;AT+CIPCLOSE&quot;)" line123="            currentEvent = EventValue.NONE" line124="        });" line125="    }" line126="" line127="    /**" line128="     * Zobrazí háček" line129="     */" line130="    //% block" line131="    export function zobrazHacek() : void{" line132="" line133="        basic.showLeds(`" line134="            . . . . #" line135="            . . . . #" line136="            # # . # ." line137="            . # # # ." line138="            . . # . ." line139="            `);" line140="    }" line141="" line142="    serial.onDataReceived(serial.delimiters(Delimiters.NewLine), function () {" line143="        recvString += serial.readString();" line144="        //led.plot(0, 0);" line145="" line146="        //basic.showString(recvString)" line147="" line148="        if (currentEvent == EventValue.ConnectWifi) {" line149="" line150="            if (recvString.includes(&quot;AT+CWJAP&quot;)) {" line151="                recvString = recvString.slice(recvString.indexOf(&quot;AT+CWJAP&quot;))" line152="                if (recvString.includes(&quot;WIFI GOT IP&quot;)) {" line153="                    wifi_connected = true" line154="                    recvString = &quot;&quot;" line155="                    control.raiseEvent(EventSource, EventValue.ConnectWifi)" line156="                } else if (recvString.includes(&quot;ERROR&quot;)) {" line157="                    wifi_connected = false" line158="                    recvString = &quot;&quot;" line159="                    control.raiseEvent(EventSource, EventValue.ConnectWifi)" line160="                }" line161="            }" line162="        }" line163="" line164="        if (currentEvent == EventValue.CIPSTART) {" line165="" line166="            if (recvString.includes(&quot;AT+CIPSTART&quot;)) { // &quot;CONNECT&quot; ? Ne =&gt; Čekám na OK" line167="                control.raiseEvent(EventSource, EventValue.CIPSTART)" line168="            }" line169="        }" line170="" line171="        if (currentEvent == EventValue.CIPSEND) {" line172="" line173="            if (recvString.includes(&quot;AT+CIPSEND&quot;)) { // &quot;SEND OK&quot; ? Ne =&gt; Čekám na OK" line174="                control.raiseEvent(EventSource, EventValue.CIPSEND)" line175="            }" line176="        }" line177="" line178="        if (currentEvent == EventValue.CIPSEND_DATA) {" line179="" line180="            if (recvString.includes(&quot;+IPD&quot;)) { // &quot;SEND OK&quot; ?" line181="" line182="                control.raiseEvent(EventSource, EventValue.CIPSEND)" line183="                recvString = &quot;&quot;" line184="            }" line185="        }" line186="" line187="        if (recvString.includes(&quot;\u000D&quot; + &quot;\u000A&quot; + &quot;OK&quot; + &quot;\u000D&quot; + &quot;\u000A&quot;)) {" line188="            control.raiseEvent(EventSource, EventValue.WAITOK);" line189="            recvString = &quot;&quot;;" line190="        }" line191="    });" line192="" line193="    //% block" line194="    export function vratPrijatyString(): string {" line195="" line196="        return recvString;" line197="    }" line198="" line199="    //% block" line200="    export function isWifiConnect(): boolean {" line201="" line202="        return wifi_connected;" line203="    }" line204="}" numlines="205"></mutation></block></statement></block></xml>